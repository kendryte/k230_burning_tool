name: Build and Release

on:
  push:
    tags: [ "v*" ]
    branches:
      - main
      - dev
      - feat/**

jobs:
jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        os: [windows, linux]
        variant: [normal, avalon3]
    env:
      BUILD_FOR_AVALON_NANO3: ${{ matrix.variant == 'avalon3' && 'ON' || 'OFF' }}
      TARGET_SUFFIX: ${{ matrix.variant == 'avalon3' && 'Avalon3' || 'Normal' }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Get Git revision
        id: revision
        run: |
          revision=$(git describe --long --tag --dirty --always)
          echo "REVISION=$revision" >> $GITHUB_ENV

      - name: Build project
        run: |
          rm -rf ${{ github.workspace }}/build && mkdir -p ${{ github.workspace }}/build

          if [[ "${{ matrix.os }}" == "windows" ]]; then
            docker run --name qt6 -v "${PWD}:/home/user/project:ro" stateoftheartio/qt6:6.7-mingw-aqt /bin/bash -c '
              export CI=1
              qt-cmake ./project -G Ninja -B ./build -DTARGET_AVALON_NANO3=${{ env.BUILD_FOR_AVALON_NANO3 }}
              cmake --build ./build
              cmake --install ./build
              ls -alh ./build
            '
            docker cp qt6:/home/user/build/dist ${{ github.workspace }}/build
            docker rm qt6

            # Use CMake-set name, so just package directly:
            if [[ "${{ matrix.variant }}" == "avalon3" ]]; then
              bin_name="Avalon_Home_Series_Firmware_Upgrade_Tool.exe"
            else
              bin_name="K230BurningTool.exe"
            fi

            zip -j "${{ github.workspace }}/build/K230BurningTool-Windows-${{ matrix.variant }}-${{ env.REVISION }}.zip" "${{ github.workspace }}/build/dist/${bin_name}"
          else
            docker run --name qt6 --privileged -v /dev/fuse:/dev/fuse -v "${PWD}:/home/user/project:ro" stateoftheartio/qt6:6.6-gcc-aqt /bin/bash -c '
              export CI=1
              sudo apt update
              sudo apt install -y libgl-dev libvulkan-dev libssl-dev libudev-dev fuse file
              sudo curl -L https://github.com/probonopd/linuxdeployqt/releases/download/continuous/linuxdeployqt-continuous-x86_64.AppImage -o /usr/bin/linuxdeployqt
              sudo chmod +x /usr/bin/linuxdeployqt
              qt-cmake ./project -G Ninja -B ./build -DTARGET_AVALON_NANO3=${{ env.BUILD_FOR_AVALON_NANO3 }}
              cmake --build ./build
              cmake --install ./build
              ls -alh ./build
            '
            docker cp qt6:/home/user/build ${{ github.workspace }}/build
            docker rm qt6

            if [[ "${{ matrix.variant }}" == "avalon3" ]]; then
              appimage="Avalon_Home_Series_Firmware_Upgrade_Tool.AppImage"
            else
              appimage="K230BurningTool-x86_64.AppImage"
            fi

            zip -j "${{ github.workspace }}/build/K230BurningTool-Linux-${{ matrix.variant }}-${{ env.REVISION }}.zip" "${{ github.workspace }}/build/${appimage}"
          fi

      - name: Upload artifact
        if: github.ref != 'refs/heads/dev'
        uses: actions/upload-artifact@v4
        with:
          name: K230BurningTool-${{ matrix.os }}-${{ matrix.variant }}-${{ env.REVISION }}
          path: |
            ${{ github.workspace }}/build/*.zip
          if-no-files-found: error
          compression-level: 0

  release:
    if: startsWith(github.ref, 'refs/tags/')
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        # with:
          # token: ${{ secrets.GIT_TOKEN }}

      - name: Generate Version Info
        run: |
          TAG_NAME="${GITHUB_REF##*/}"
          VERSION_STR="${TAG_NAME#v}"
          IFS='.' read -r MAJOR MINOR PATCH <<< "$VERSION_STR"
          VERSION_VALUE=$((MAJOR * 1000 + MINOR * 100 + PATCH))
          HASH_VALUE="$(git rev-parse HEAD)"
          echo "{\"version\": $VERSION_VALUE, \"hash\": \"$HASH_VALUE\"}" > k230_burningtool_lastest.txt

      - uses: actions/download-artifact@v4
        with:
          path: ./release

      - name: List artifacts
        run: ls -R ./release

      - name: Upload GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          generate_release_notes: true
          tag_name: ${{ github.ref_name }}
          files: |
            k230_burningtool_lastest.txt
            ./release/**/*.zip
